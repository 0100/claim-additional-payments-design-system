---
title: Button
description: Use the button component to help users carry out an action on a GOV.UK page
section: Components
aliases:
backlog_issue_id: 34
layout: layout-pane.njk
---

{% from "_example.njk" import example %}

{{ example({group: "components", item: "button", example: "default", html: true, nunjucks: true, open: false}) }}

## When to use this component

Use the button component to help users carry out an action on a GOV.UK page like starting an application or saving their information.

## How it works

Write button text in sentence case, describing the action it performs. For example:

- ‘Start now’ at the [start of the service](/patterns/start-pages/)
- ‘Sign in’ to an account a user has already created
- ‘Continue’ when the service does not save a user’s information
- ‘Save and continue’ when the service does save a user’s information
- ‘Save and come back later’ when a user can save their information and come back later
- ‘Add another’ to add another item to a list or group
- ‘Pay’ to make a payment
- ‘Confirm and send’ on a [check answers](/patterns/check-answers/) page that does not have any legal content a user must agree to
- ‘Accept and send’ on a [check answers](/patterns/check-answers/) page that has legal content a user must agree to
- ‘Sign out’ when a user is signed in to an account

You may need to include more or different words to better describe the action. For example, ‘Add another address’ and ‘Accept and claim a tax refund’.

Align the primary action button to the left edge of your form.

There are 2 ways to use the button component. You can use HTML or, if you are using [Nunjucks](https://mozilla.github.io/nunjucks/) or the [GOV.UK Prototype Kit](https://govuk-prototype-kit.herokuapp.com), you can use the Nunjucks macro.

### Start buttons

Use a start button as the main call to action on your service’s start page.

{{ example({group: "components", item: "button", example: "start", html: true, nunjucks: true, open: false}) }}

### Disabled buttons

Disabled buttons have poor contrast and can confuse some users, so avoid them if&nbsp;possible.

Only use disabled buttons if research shows it makes the user interface easier to&nbsp;understand.

{{ example({group: "components", item: "button", example: "disabled", html: true, nunjucks: true, open: false}) }}

### Stop users from accidentally sending information more than once

Sometimes, users double click buttons because they:

- have used operating systems where they have to double click items to make them work
- are experiencing a slow connection which means they are not given feedback on their action quickly enough
- have motor impairments such as hand tremors which cause them to click the button involuntarily 

In some cases, this can mean their information is sent twice. 

For example, the GOV.UK Notify team discovered that a number of users were receiving invitations twice, because the person sending them was double clicking the “send” button. 

If you are working in production and research shows that users are frequently sending information twice, you can configure the button to ignore the second click. 

To do this, include the `preventDoubleClick` attribute as shown in this example.



This feature will prevent double clicks for users that have JavaScript enabled, however you should also think about the issue server-side to protect against attacks.

In the case of slow connections, aim to give the user information about what’s happening, for example, by showing a loading spinner or a modal, before using `preventDoubleClick`. 

## Research on this component

If you’ve used this component, get in touch to share your user research findings.
